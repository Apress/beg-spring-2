<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
   version="2.4">

   <display-name>
      Beginning Hibernate 3 Timesheet Application
   </display-name>

   <!-- Overrides the default context location -->
   <context-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:applicationContext.xml</param-value>
   </context-param>

   <!-- This listener owns the root Spring application context -->
   <listener>
      <listener-class>
         org.springframework.web.context.ContextLoaderListener
      </listener-class>
   </listener>

   <!-- Custom filter to make the context path 
        conveniently available in the request 
        attributes -->
   <filter>
      <filter-name>contextFilter</filter-name>
      <filter-class>
         com.apress.timesheets.util.ContextFilter
      </filter-class>
   </filter>

   <!-- Hibernate filter to ensure the session is 
      available to entities throughout the request -->
   <filter>
      <filter-name>hibernateFilter</filter-name>
      <filter-class>
    org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
      </filter-class>
   </filter>

   <!-- Proxied to the Acegi Request Filter (security) -->
   <filter>
      <description>Acegi Request Filter</description>
      <filter-name>acegi-request-filter</filter-name>
      <filter-class>
         org.springframework.web.filter.DelegatingFilterProxy
      </filter-class>
      <init-param>
         <!-- If we omit this, the filter name is used -->
         <param-name>targetBeanName</param-name>
         <param-value>acegiRequestFilter</param-value>
      </init-param>
   </filter>

   <!-- Mappings -->
   <filter-mapping>
      <filter-name>contextFilter</filter-name>
      <url-pattern>/*</url-pattern>
   </filter-mapping>

   <filter-mapping>
      <filter-name>hibernateFilter</filter-name>
      <url-pattern>/*</url-pattern>
   </filter-mapping>

   <!-- Acegi security applies to ALL URLs -->
   <filter-mapping>
      <filter-name>acegi-request-filter</filter-name>
      <url-pattern>/*</url-pattern>
   </filter-mapping>

   <!-- Alternative to the listener config. This should only
        be necessary in a Servlet API 2.2 (which do not support
        listeners) or lower server, or in a Servlet API 2.3 
        server where listeners may not be initialized before 
        servlets. All servers supporting Servlet API 2.4 and 
        up should use the listener instead.
   <servlet>
     <servlet-name>context</servlet-name>
     <servlet-class>
       org.springframework.web.context.ContextLoaderServlet
     </servlet-class>
     <load-on-startup>1</load-on-startup>
   </servlet>
    -->

   <!-- This owns its own application context and 
        has access to the listener's -->
   <servlet>
      <servlet-name>timesheet</servlet-name>
      <servlet-class>
         org.springframework.web.servlet.DispatcherServlet
      </servlet-class>      
      <!-- Override the default WEB-INF location -->
      <init-param>
         <param-name>contextConfigLocation</param-name>
         <param-value>classpath:timesheet-servlet.xml</param-value>
      </init-param>
      <load-on-startup>2</load-on-startup>
   </servlet>

   <!-- This dispatcher will be used to configure 
        and dispatch to Hessian services -->
   <servlet>
      <servlet-name>hessian</servlet-name>
      <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
      <!-- Override the default WEB-INF location -->
      <init-param>
         <param-name>contextConfigLocation</param-name>
         <param-value>classpath:hessian-servlet.xml</param-value>
      </init-param>
      <load-on-startup>3</load-on-startup>
   </servlet>

   <!-- This dispatcher will be used to configure 
        and dispatch to Burlap services -->
   <servlet>
      <servlet-name>burlap</servlet-name>
      <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
      <!-- Override the default WEB-INF location -->
      <init-param>
         <param-name>contextConfigLocation</param-name>
         <param-value>classpath:burlap-servlet.xml</param-value>
      </init-param>
      <load-on-startup>4</load-on-startup>
   </servlet>

   <!-- This dispatcher will be used to configure 
        and dispatch to Spring HttpInvoker services -->
   <servlet>
      <servlet-name>invoker</servlet-name>
      <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
      <!-- Override the default WEB-INF location -->
      <init-param>
         <param-name>contextConfigLocation</param-name>
         <param-value>classpath:invoker-servlet.xml</param-value>
      </init-param>
      <load-on-startup>5</load-on-startup>
   </servlet>

   <!-- This receives SOAP requests and hands them to the
        appropriate implementation -->
   <servlet>
      <servlet-name>axis</servlet-name>
      <servlet-class>
         org.apache.axis.transport.http.AxisServlet
      </servlet-class>
      <load-on-startup>6</load-on-startup>
   </servlet>
   
   <servlet-mapping>
      <servlet-name>axis</servlet-name>
      <url-pattern>/service/*</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>timesheet</servlet-name>
      <url-pattern>/home/*</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>timesheet</servlet-name>
      <url-pattern>/login/*</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>timesheet</servlet-name>
      <url-pattern>/accessDenied/*</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>timesheet</servlet-name>
      <url-pattern>/admin/*</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>timesheet</servlet-name>
      <url-pattern>/timesheets/*</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>hessian</servlet-name>
      <url-pattern>/hessian/*</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>burlap</servlet-name>
      <url-pattern>/burlap/*</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>invoker</servlet-name>
      <url-pattern>/invoker/*</url-pattern>
   </servlet-mapping>

   <!-- Resolve the root directory to the home path -->
   <welcome-file-list>
      <welcome-file>home</welcome-file>      
   </welcome-file-list>

</web-app>